openapi: 3.0.3
info:
  title: Boosting 5G with Network Coding-Aware Slicing
  description: |
    This is an API for informing an SDN controller of potential network slices in its infrastructure, requesting infrastructure information to improve Network Coding algorithms and introduce link metrics of the infrastructure.
    Used in the work [â™ ](https://www.overleaf.com/project/65c4bf4599ae6fb64d611bf0)
  termsOfService: http://swagger.io/terms/
  contact:
    email: rafaelg@student.dei.uc.pt
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://127.0.0.1
tags:
- name: Network slices
  description: Network slice information for the SDN-C
- name: Links
  description: Link metrics information for the SDN-C
- name: Flow Rules
  description: Flow rules for the network coding algorithm
paths:
  /slice:
    get:
      tags:
      - Network slices
      summary: Gets the existing network slices in the infrastructure
      description: Gets the existing network slices in the infrastructure
      operationId: slice_get
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slice'
                x-content-type: application/json
        "500":
          description: Internal error
      x-openapi-router-controller: swagger_server.controllers.network_slices_controller
    post:
      tags:
      - Network slices
      summary: Add an array of network slices to the infrastructure
      description: Add an array of network slices to the infrastructure
      operationId: add_slice
      requestBody:
        description: Create new network slices in the infrastructure
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SliceCreate'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slice'
                x-content-type: application/json
        "400":
          description: Invalid input
        "500":
          description: Internal error
      x-openapi-router-controller: swagger_server.controllers.network_slices_controller
  /slice/{sliceId}:
    get:
      tags:
      - Network slices
      summary: Find a network slice by ID
      description: Returns a single network slice
      operationId: get_slice_by_id
      parameters:
      - name: sliceId
        in: path
        description: ID of network slice to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slice'
        "404":
          description: Network slice not found
        "500":
          description: Internal error
      x-openapi-router-controller: swagger_server.controllers.network_slices_controller
    put:
      tags:
      - Network slices
      summary: Updates a network slice
      description: Updates a network slice
      operationId: update_slice
      parameters:
      - name: sliceId
        in: path
        description: Network slice id to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Update an existent network slice in the infrastructure
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SliceCreate'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slice'
        "404":
          description: Network slice not found
        "500":
          description: Internal error
      x-openapi-router-controller: swagger_server.controllers.network_slices_controller
    delete:
      tags:
      - Network slices
      summary: Deletes a network slice
      description: Delete a network slice
      operationId: delete_slice
      parameters:
      - name: sliceId
        in: path
        description: Network slice id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
        "404":
          description: Network slice not found
        "500":
          description: Internal error
      x-openapi-router-controller: swagger_server.controllers.network_slices_controller
  /links:
    get:
      tags:
      - Links
      summary: Gets the existing link information
      description: Gets the existing link information
      operationId: links_get
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Link'
                x-content-type: application/json
        "500":
          description: Internal error
      x-openapi-router-controller: swagger_server.controllers.links_controller
    post:
      tags:
      - Links
      summary: Add an array of link information
      description: Add an array of link information
      operationId: add_links_info
      requestBody:
        description: Associate link metrics to a network link
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Link'
      responses:
        "400":
          description: Invalid input
        "500":
          description: Internal error
      x-openapi-router-controller: swagger_server.controllers.links_controller
  /flowrules:
    get:
      tags:
      - Flow Rules
      summary: Gets the existing flow rules
      description: Gets the existing flow rules
      operationId: flowrules_get
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flowrule'
                x-content-type: application/json
        "500":
          description: Internal error
      x-openapi-router-controller: swagger_server.controllers.flow_rules_controller
components:
  schemas:
    Slice:
      required:
      - _5qi_levels
      - active
      - downlink_user_throughput_bps_ue
      - dscp_levels
      - e2e_latency_ms
      - id
      - jitter
      - loss_probability
      - service_slice_type_sst
      - uplink_user_throughput_bps_ue
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 15
        use_case_type:
          type: string
          example: This network slice is used for video streaming
        service_slice_type_sst:
          minItems: 1
          type: string
          description: Network slice type
          enum:
          - eMBB
          - uRLLC
          - mMTC
          - uLBC
        downlink_user_throughput_bps_ue:
          type: number
          description: Downlink bandwidth in bps
          format: double
          example: 100000
        uplink_user_throughput_bps_ue:
          type: number
          description: Uplink bandwidth in bps
          format: double
          example: 100000
        e2e_latency_ms:
          type: number
          description: Latency in milliseconds
          format: double
          example: 10
        loss_probability:
          maximum: 100
          type: number
          description: Tolerable loss probability
          format: double
          example: 0.1
        jitter:
          type: number
          description: Tolerable jitter in milliseconds
          format: double
          example: 13
        dscp_levels:
          type: array
          example:
          - 18
          - 20
          - 22
          items:
            type: integer
            description: An array of the decimal dscp values that the slice supports
            format: int64
        _5qi_levels:
          type: array
          description: An array of the decimal dscp values that the slice supports
          example:
          - 7
          - 8
          items:
            type: integer
            format: int64
        active:
          type: boolean
          description: If the network slice is active in the network
          example: true
      description: A network slice in the network
      example:
        uplink_user_throughput_bps_ue: 100000
        dscp_levels:
        - 18
        - 20
        - 22
        loss_probability: 0.1
        jitter: 13
        _5qi_levels:
        - 7
        - 8
        service_slice_type_sst: eMBB
        active: true
        use_case_type: This network slice is used for video streaming
        e2e_latency_ms: 10
        id: 15
        downlink_user_throughput_bps_ue: 100000
    SliceCreate:
      required:
      - _5qi_levels
      - active
      - downlink_user_throughput_bps_ue
      - dscp_levels
      - e2e_latency_ms
      - jitter
      - loss_probability
      - service_slice_type_sst
      - uplink_user_throughput_bps_ue
      type: object
      properties:
        use_case_type:
          type: string
          example: This network slice is used for video streaming
        service_slice_type_sst:
          minItems: 1
          type: string
          description: Network slice type
          enum:
          - eMBB
          - uRLLC
          - mMTC
          - uLBC
        downlink_user_throughput_bps_ue:
          type: number
          description: Downlink bandwidth in bps
          format: double
          example: 100000
        uplink_user_throughput_bps_ue:
          type: number
          description: Uplink bandwidth in bps
          format: double
          example: 100000
        e2e_latency_ms:
          type: number
          description: Latency in milliseconds
          format: double
          example: 10
        loss_probability:
          maximum: 100
          type: number
          description: Tolerable loss probability
          format: double
          example: 0.1
        jitter:
          type: number
          description: Tolerable jitter in milliseconds
          format: double
          example: 13
        dscp_levels:
          type: array
          description: An array of the decimal dscp values that the slice supports
          example:
          - 18
          - 20
          - 22
          items:
            type: integer
            format: int64
        _5qi_levels:
          type: array
          description: An array of the decimal dscp values that the slice supports
          example:
          - 7
          - 8
          items:
            type: integer
            format: int64
        active:
          type: boolean
          description: If the network slice is active in the network
          example: true
      description: A network slice in the network (used for creating)
    Link:
      required:
      - bandwith
      - energy_consumption
      - jitter
      - latency
      - loss_prob
      - port_numb_dst
      - port_numb_src
      - sw_id_dst
      - sw_id_src
      type: object
      properties:
        sw_id_src:
          type: string
          description: Id of the switch
          example: of:0000000000000001
        sw_id_dst:
          type: string
          description: Id of the switch
          example: of:0000000000000002
        port_numb_src:
          type: integer
          description: Connected port that belongs to sw_id_src
          format: int64
          example: 1
        port_numb_dst:
          type: integer
          description: Connected port that belongs to sw_id_dst
          format: int64
          example: 2
        bandwith:
          type: number
          description: Bandwith of the link in bps
          format: double
          example: 100000
        latency:
          type: number
          description: Latency of the link in milliseconds
          format: double
          example: 10
        jitter:
          type: number
          description: Jitter in the link in milliseconds
          format: double
          example: 10
        loss_prob:
          maximum: 100
          type: number
          description: Percentage of packet loss in the link
          format: double
          example: 0.1
        energy_consumption:
          type: number
          description: Estimated energy consumption when using the link in Watts
          format: double
          example: 200
      description: A link in the network
      example:
        energy_consumption: 200
        jitter: 10
        port_numb_src: 1
        bandwith: 100000
        latency: 10
        sw_id_dst: of:0000000000000002
        port_numb_dst: 2
        loss_prob: 0.1
        sw_id_src: of:0000000000000001
    Flowrule:
      required:
      - app_id
      - bytes
      - device_uri
      - duration_treatment
      - group_id
      - hard_timeout
      - id
      - packets
      - permanent
      - priority
      - selector
      - state
      - table_name
      - timeout
      - treatment
      type: object
      properties:
        id:
          type: string
          description: Id of this flow
          example: 180000be641e06
        state:
          type: string
          description: The flow entry state
          example: ADDED
        bytes:
          type: integer
          description: Number of bytes this flow rule has matched
          format: int64
          example: 11676
        packets:
          type: integer
          description: Number of packets this flow rule has matched
          format: int64
          example: 84
        duration_treatment:
          type: integer
          description: Number of seconds this flow rule has been applied
          format: int64
          example: 400
        priority:
          type: integer
          description: Flow rule priority given in natural order (Higher numbers mean
            higher priorities)
          format: int64
          example: 5
        table_name:
          type: string
          description: The table identifier for this rule
          example: "0"
        app_id:
          type: integer
          description: The application id of this flow
          format: int64
          example: 24
        group_id:
          type: integer
          description: The group id of this flow
          format: int64
          example: 0
        timeout:
          type: integer
          description: The timeout for this flow requested by an application
          format: int64
          example: 0
        hard_timeout:
          type: integer
          description: "The hard timeout for this flow requested by an application.\
            \ This parameter configure switch's flow hard timeout. In case of controller-switch\
            \ connection lost, this variable can be useful"
          format: int64
          example: 0
        permanent:
          type: boolean
          description: Whether the flow is permanent (does not time out)
          example: true
        selector:
          type: string
          description: The traffic selector that identifies what traffic this rule
            should apply to
          example: "DefaultTrafficSelector{criteria=[ETH_TYPE:ipv4]}"
        treatment:
          type: string
          description: The traffic treatment that applies to selected traffic
          example: "DefaultTrafficTreatment{immediate=[OUTPUT:CONTROLLER], deferred=[],\
            \ transition=None, meter=[], cleared=false, StatTrigger=null, metadata=null}"
        device_uri:
          type: string
          description: The identity of the device where this rule applies
          example: of:0000000000000001
      description: A flowrule in the network
      example:
        treatment: "DefaultTrafficTreatment{immediate=[OUTPUT:CONTROLLER], deferred=[],\
          \ transition=None, meter=[], cleared=false, StatTrigger=null, metadata=null}"
        priority: 5
        hard_timeout: 0
        table_name: "0"
        packets: 84
        timeout: 0
        duration_treatment: 400
        group_id: 0
        bytes: 11676
        permanent: true
        device_uri: of:0000000000000001
        selector: "DefaultTrafficSelector{criteria=[ETH_TYPE:ipv4]}"
        id: 180000be641e06
        state: ADDED
        app_id: 24

